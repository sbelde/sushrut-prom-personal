---
AWSTemplateFormatVersion: '2010-09-09'
Description: >
  This template creates a Prometheus cluster using Amazon EC2 AutoScaling groups.
  
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: ASG cluster configuration
        Parameters:
          - AsgMaxSize
          - AsgMinSize
          - Subnet
          - VpcId
          - InstanceType
          - Ami
          - Keyname

      - Label:
          default: Prometheus configuration
        Parameters:
          - PrometheusVersion
          - Environment
          - Exposure
          - HostedZoneId
          - DnsName
          - UseSsl
          - CertificateArn
          - ConsulEndpoint
          - UseConsulTemplateToGenerateFile
          - StorageTsdbRetention
          - StorageTsdbMaxBlockDuration
          - StorageTsdbMinBlockDuration
          - QueryMaxConcurrency
          - QueryMaxConnections
          - LogLevel

    ParameterLabels:
      Ami:
        default: The AMI used to start the cluster instances
      AsgMaxSize:
        default: The maximum number of instances to launch
      AsgMinSize:
        default: The minimum number of instances to keep in service
      Subnets:
        default: The subnets in which the instances can run
      VpcId:
        default: The VPC to which the subnets belong
      PrometheusVersion:
        default: The Prometheus version to launch
      Environment:
        default: The environment for which the Prometheus cluster will scrape targets
      InstanceType:
        default: The instance size to use for the Prometheus cluster
      KeyName:
        default: The SSH key to use for booting up the instances
      Exposure:
        default: Whether to set the Prometheus load balancer as internet-facing or internal
      HostedZoneId:
        default: The Hosted Zone ID to use in Route53 to expose the Prometheus DnsName
      DnsName:
        default: The value of the Prometheus hostname
      UseSsl:
        default: Whether to use SSL when connecting via load balancer
      CertificateArn:
        default: The Certificate ARN to use when UseSsl is set to "true"
      ConsulEndpoint:
        default: The consul endpoint to connect to for configuration details
      UseConsulTemplateToGenerateFile:
        default: Whether to use consul-template to generate file
      StorageTsdbRetention:
        default: The amount of data to keep in storage (default is 15 days)
      StorageTsdbMaxBlockDuration:
        default: The maximum block value to store data for (default is 36 hours)
      StorageTsdbMinBlockDuration:
        default: The minimum block value to store data for (default is 2 hours)
      QueryMaxConcurrency:
        default: The maximum concurrency level for queries (default is 20)
      QueryMaxConnections:
        default: The maximum amount of connections (default is 512)
      LogLevel:
        default: The log level (default is info)
      
Parameters:
  Ami:
    Type: String
    Default: ami-013be31976ca2c322
    Description: For optimal performance, use the latest Amazon Linux AMI (HVM) available
  AsgMaxSize:
    Type: Number
    Default: 2
  AsgMinSize:
    Type: Number
    Default: 1
  Subnets:
    Type: CommaDelimitedList
    Default: AWS::EC2::Subnet::Id
  VpcId:
    Type: AWS::EC2::VPC::Id
  PrometheusVersion:
    Type: String
    Default: '2.5.0'
  Environment:
    Type: String
    AllowedValues:
    - dev
    - staging
    - prod
    Default: dev
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
  Exposure:
    Type: String
    AllowedValues:
    - internet-facing
    - internal
    Default: internet-facing
  HostedZoneId:
    Type: AWS::Route53::HostedZone::Id
  DnsName:
    Type: String
    Default: prometheus.sushrut.personal.com
  ConsulEndpoint:
    Type: String
    Default: consul.sushrut.personal.com
  UseConsulTemplateToGenerateFile:
    Type: String
    Default: 'false'
    AllowedValues:
    - 'true'
    - 'false'
  StorageTsdbRetention:
    Type: String
    Default: 15d
  StorageTsdbMaxBlockDuration:
    Type: String
    Default: 36h
  StorageTsdbMinBlockDuration:
    Type: String
    Default: 2h
  QueryMaxConcurrency:
    Type: String
    Default: '20'
  QueryMaxConnections:
    Type: String
    Default: '512'
  LogLevel:
    Type: String
    Default: info
  UseSsl:
    Type: String
    AllowedValues:
    - true
    - false
    Default: false
  CertificateArn:
    Type: String
  InstanceType:
    Type: String
    AllowedValues:
    - m5.large
    - m5.xlarge
    - m5.2xlarge
    - m5.4xlarge
    - m5.12xlarge
    - m5.24xlarge
    - m4.large
    - m4.xlarge
    - m4.2xlarge
    - m4.4xlarge
    - m4.10xlarge
    - m4.16xlarge
    - c5.large
    - c5.xlarge
    - c5.2xlarge
    - c5.4xlarge
    - c5.9xlarge
    - c5.18xlarge
    - c4.large
    - c4.xlarge
    - c4.2xlarge
    - c4.4xlarge
    - c4.8xlarge
    - g3.4xlarge
    - g3.8xlarge
    - g3.16xlarge
    - g2.2xlarge
    - g2.8xlarge
    - r4.large
    - r4.xlarge
    - r4.2xlarge
    - r4.4xlarge
    - r4.8xlarge
    - r4.16xlarge
    - d2.xlarge
    - d2.2xlarge
    - d2.4xlarge
    - d2.8xlarge
    - i3.large
    - i3.xlarge
    - i3.2xlarge
    - i3.4xlarge
    - i3.8xlarge
    - i3.16xlarge
    - i2.xlarge
    - i2.2xlarge
    - i2.4xlarge
    - i2.8xlarge
    - t2.micro

Conditions:
  LoadBalancerSsl: 
    Fn::Equals:
      - Ref: UseSsl
      - true

Resources: 

  Sg:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription:
        Fn::Sub: ${AWS::StackName}-Sg
      VpcId:
        Ref: VpcId
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 0
        ToPort: 65535
        CidrIp: 0.0.0.0/0
      - IpProtocol: udp
        FromPort: 0
        ToPort: 65535
        CidrIp: 0.0.0.0/0

  ASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
        Ref: Subnets
      HealthCheckGracePeriod: '600'
      HealthCheckType: EC2
      LoadBalancerNames:
        - Ref: PrometheusElb
      LaunchConfigurationName:
        Ref: Lc
      MinSize:
        Ref: AsgMinSize
      MaxSize:
        Ref: AsgMaxSize
      DesiredCapacity:
        Ref: AsgMinSize
      Tags:
      - Key: Name
        Value:
          Fn::Sub: PrometheusASG-${AWS::StackName}
        PropagateAtLaunch: true
      - Key: Team
        Value: epa.enterprise-platform-engineering
        PropagateAtLaunch: true
      - Key: Application
        Value: Prometheus
        PropagateAtLaunch: true
      - Key: Environment
        Value:
          Ref: Environment
        PropagateAtLaunch: true
      - Key: StackName
        Value:
          Ref: AWS::StackName
        PropagateAtLaunch: true
      MetricsCollection:
      - Metrics:
        - GroupTotalInstances
        Granularity: 1Minute
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MinInstancesInService:
          Ref: AsgMinSize
        MaxBatchSize: 1
        PauseTime: PT3M
        SuspendProcesses:
        - AZRebalance
        - AlarmNotification
        - HealthCheck
        - ReplaceUnhealthy
        - ScheduledActions

  Lc:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId:
        Ref: Ami
      EbsOptimized: false
      BlockDeviceMappings:
      - DeviceName: /dev/xvda
        Ebs:
          VolumeType: gp2
          VolumeSize: 100
      InstanceType:
        Ref: InstanceType
      IamInstanceProfile: arn:aws:iam::138185827818:instance-profile/CodeDeployDemo-EC2-Instance-Profile
      KeyName:
        Ref: KeyName
      SecurityGroups:
      - Ref: Sg
      UserData:
        Fn::Base64:
          Fn::Sub: |
            #cloud-config
            packages:
            - aws-cli
            - jq
            - ntp
            - curl
            - git
            - gcc
            - wget
            - python27-devel
            - python27-pip
            - net-tools
            - bind-tools
            - htop
            - zip
            - unzip
            runcmd:
            - rpm -ivh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
            - yum update
            - yum install -y ansible
            - mkdir -p /root/ansible
            - git clone --single-branch --branch test-ansible-prometheus https://4c6bac8df4699bf98b81f8e846781a430446638d@github.com/sbelde/sushrut-prom-personal.git /root/ansible
            - ansible-playbook /root/ansible/ansible/prometheus-playbook.yml
            
  CpuUtilizationTargetTracking:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName:
        Ref: ASG
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration:
        TargetValue: 70
        PredefinedMetricSpecification:
          PredefinedMetricType: ASGAverageCPUUtilization

  PrometheusElb:
    Type: AWS::ElasticLoadBalancing::LoadBalancer
    Properties:
      ConnectionSettings:
        IdleTimeout: 70
      HealthCheck:
        HealthyThreshold: 3
        Interval: 5
        Target: HTTP:9090/graph
        Timeout: 3
        UnhealthyThreshold: 2
      Listeners:
      - InstancePort: 9090
        LoadBalancerPort: 80
        Protocol: HTTP
      - InstancePort: 9090
        LoadBalancerPort: 9090
        Protocol: HTTP
      - Fn::If:
        - LoadBalancerSsl
        - InstancePort: 9090
          LoadBalancerPort: 443
          Protocol: HTTPS
          SSLCertificateId:
            Ref: CertificateArn
        - Ref: AWS::NoValue
      Scheme:
        Ref: Exposure
      SecurityGroups:
      - Ref: Sg
      Subnets:
        Ref: Subnets
      Tags:
      - Key: Team
        Value: NETBEARS
      - Key: Application
        Value: Prometheus
      - Key: Environment
        Value:
          Ref: Environment
      - Key: StackName
        Value:
          Ref: AWS::StackName

  PrometheusDnsRecord:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneId:
        Ref: HostedZoneId
      Comment: 
        Fn::Sub: Route53-record-for-${AWS::StackName}.
      RecordSets:
      - Name:
          Ref: DnsName
        Type: A
        AliasTarget:
          HostedZoneId:
            Fn::GetAtt: PrometheusElb.CanonicalHostedZoneNameID
          DNSName:
            Fn::GetAtt: PrometheusElb.DNSName

Outputs:

  PrometheusUi:
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-PrometheusDnsRecord
    Value:
      Fn::If:
        - LoadBalancerSsl
        - Fn::Sub: https://${DnsName}/graph
        - Fn::Sub: http://${DnsName}/graph

  PrometheusElbCanonicalHostedZoneNameID:
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-PrometheusElbCanonicalHostedZoneNameID
    Value:
      Fn::GetAtt: PrometheusElb.CanonicalHostedZoneNameID

  PrometheusElbDNSName:
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-PrometheusElbDNSName
    Value:
      Fn::GetAtt: PrometheusElb.DNSName